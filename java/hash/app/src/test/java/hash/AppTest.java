/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hash;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {

  @Test
  void testHashTable() {
    HashTable<String> hashTable = new HashTable<>(10);
    hashTable.add(11,"marah");
    hashTable.add(12,"sara");
    hashTable.add(13,"mais");
    hashTable.add(13,"sabeel");
//Retrieving based on a key returns the value stored
    assertEquals("sara", hashTable.get(12));
    assertTrue(hashTable.contains(11));
    //Successfully returns null for a key that does not exist in the hashtable
    assertFalse(hashTable.contains(5));
    assertNull(hashTable.get(1));
    //Successfully hash a key to an in-range value
    assertEquals(0,hashTable.getHash(20));

  }
  @Test
  void testRepeatedWord() {
    String input1 = "Once upon a time, there was a brave princess who...";
    String input2 =
      "It was the best of times, it was the worst of times, it was the age of wisdom, it was the age of " +
        "foolishness, it was the epoch of belief, it was the epoch of incredulity, it was the season of Light, it was" +
        " " + "the season of Darkness, it was the spring of hope, it was the winter of despair, we had everything " +
        "before us, " + "we had nothing before us, we were all going direct to Heaven, we were all going direct the " +
        "other way – in " + "short, the period was so far like the present period, that some of its noisiest " +
        "authorities insisted on its " + "being received, for good or for evil, in the superlative degree of " +
        "comparison only...";
    String input3 = "It was a queer, sultry summer the summer they electrocuted the Rosenbergs, and I didn’t know " +
      "what" + " I was doing in New York...";

    assertEquals("a", RepeatedWord.repeatedWord(input1));
    assertEquals("it", RepeatedWord.repeatedWord(input2));
    assertEquals("summer", RepeatedWord.repeatedWord(input3));
  }
}
